module source(
				input	CLK,
				input 	Rst,
				output 	Bit
				);
					
	reg 	[9:0] r_addr=10'd0	;	//初始化很重要
	wire 	[9:0] s_addr		;	
	//地址累加
	always@(posedge CLK or negedge Rst)	begin
		if(!Rst)	begin
			r_addr <= 10'd0;	
		end else if(addr <= 10'd1023)	begin
			r_addr <= r_addr + 10'd1;
		end else begin
			r_addr <= 10'd0;
		end
	end
	
	assign s_addr = r_addr
	//Rom实例化		
	bit_source bit_source(
				.address(s_addr),
				.clock(CLK),
				.q(Bit)
				);
			
endmodule